version: '3.8'

services:
  control-service-nest-api:
    container_name: control-service-nest-api
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev
    ports:
      - 8080:8080
    networks:
      - thingable
    restart: always
    depends_on:
      - control-service-pg-db
      - kafka
    env_file:
      - .docker.env

  zookeeper:
    image: bitnami/zookeeper:3.4.13
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - thingable
  
  kafka:
    image: bitnami/kafka:2.8.1
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=events:1:1
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - thingable
    depends_on:
      - zookeeper

  control-service-pg-db:
    image: postgres:13
    container_name: control-service-pg-db
    environment:
      POSTGRES_PASSWORD: thingable2025
      POSTGRES_USER: user
      POSTGRES_DB: thingable_control_service
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - 5435:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - thingable

networks:
  thingable:
    name: thingable

volumes:
  postgres:
